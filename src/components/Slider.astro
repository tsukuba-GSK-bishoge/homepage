---
import { Image } from "astro:assets";
import "@splidejs/splide/css";
interface Props {
  imagePaths: string[];
}

const { imagePaths }: Props = Astro.props;
---
<section id="wrapper">
  <section class="kv-wrapper">
    <div id="kv-carousel" class="splide">
      <div class="splide__track">
        <ul class="splide__list">
          {
            imagePaths.map((path) => (
              <li class="splide__slide">
                <div class="frame">
                  <div class="content">
                    <!-- <Image src={path} alt={"image"} class="frame-image" /> -->
                    <img src={path} alt={"image"} class="frame-image" />
                  </div>
                </div>
              </li>
            ))
          }
        </ul>
      </div>
    </div>
  </section>
</section>

<style>
  #wrapper {
    position: relative;
  }

  .kv-wrapper {
    max-width: 1600px;
    margin-inline: auto;
  }

  #kv-carousel {
    display: flex;
    padding-block: 1rem;
  }

  .splide__slide {
    padding: 0;
    margin: auto;
  }

  .splide__slide.is-active {
    padding: 0;
  }

  .splide__slide a {
    display: block;
  }
  
  @media screen and (max-width: 768px) {
    .splide__slide {
      padding: 2rem;
      margin: auto;
      transition: padding 0.3s ease;
    }

    .splide__slide.is-active {
      padding: 0;
    }
  }

  .frame-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.2s;
  }

  .frame-image:hover {
    transform: scale(1.1);
  }
  
  /*
  .frame {
    position: relative;
    display: inline-block;
    width: 100%;
    height: auto;
  }

  .content {
    position: absolute;
    inset: 0;
    z-index: 0;
    margin: auto;
    overflow: hidden;
    object-fit: cover;
  }
   */
</style>

<script>
  import Splide from "@splidejs/splide";

  const kv = new Splide("#kv-carousel", {
    type: "loop",
    rewind: true,
    pagination: false,
    arrows: false,
    perPage: 3,
    focus: "center",
    drag: true,
    gap: "min(7vw, 6.5rem)",
    padding: "3rem",
    updateOnMove: true,
    autoplay: true,
    interval: 2000,
    breakpoints: {
      700: {
        perPage: 1.5,
        gap: 0,
        padding: 0,
      },
    },
  });

  kv.mount();
</script>
